{"ast":null,"code":"var _jsxFileName = \"/Users/andreimaracheuski/marketplace_project/my-app/src/pages/CreateProduct.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, Stack, Grid, Alert } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { InputData } from \"../components/create/InputData\";\nimport { DragZone } from \"../components/create/DragZone\";\nimport { CreateButton } from \"../components/create/CreateButton\";\nimport { SelectBlock } from \"../components/create/SelectBlock\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nftDefaultState = {\n  name: \"\",\n  file: \"\",\n  description: \"\",\n  tag: \"\",\n  externalLink: \"\",\n  quantity: \"\",\n  blockchain: \"\",\n  id: \"\"\n};\nexport const CreateProduct = () => {\n  _s();\n  const [nft, setNft] = useState(nftDefaultState);\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n  const addNft = event => {\n    event.preventDefault();\n    axios.post('http://localhost:3001/api/items', nft).then(function (response) {\n      console.log(response);\n      setShowSuccessAlert(true);\n    }).catch(function (error) {\n      console.log(error);\n      setShowErrorAlert(true);\n    });\n    setNft(nftDefaultState);\n    setTimeout(() => {\n      setShowSuccessAlert(false);\n      setShowErrorAlert(false);\n    }, 2000);\n  };\n  useEffect(() => {\n    setNft({\n      ...nft,\n      id: md5(nft.name)\n    });\n  }, [nft.name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragZone, {\n      onDrop: file => setNft({\n        ...nft,\n        file\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        ml: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            maxWidth: \"50%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.name,\n            onChange: e => setNft({\n              ...nft,\n              name: e.target.value\n            }),\n            label: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.externalLink,\n            onChange: e => setNft({\n              ...nft,\n              externalLink: e.target.value\n            }),\n            label: \"externalLink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.quantity,\n            onChange: e => setNft({\n              ...nft,\n              quantity: e.target.value\n            }),\n            label: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            maxWidth: \"50%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(SelectBlock, {\n            value: nft.tag,\n            onChange: e => setNft({\n              ...nft,\n              tag: e.target.value\n            }),\n            label: \"Tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SelectBlock, {\n            value: nft.blockchain,\n            onChange: e => setNft({\n              ...nft,\n              blockchain: e.target.value\n            }),\n            label: \"Blockchain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputData, {\n      value: nft.description,\n      onChange: e => setNft({\n        ...nft,\n        description: e.target.value\n      }),\n      label: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      addNft: addNft,\n      text: 'create'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showSuccessAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      children: \"NFT successfully created!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }, this), showErrorAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Something went wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateProduct, \"d7Pa/d1NEn7PzVd2Ewp0X7685qE=\");\n_c = CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","Box","Stack","Grid","Alert","useState","useEffect","InputData","DragZone","CreateButton","SelectBlock","axios","md5","nftDefaultState","name","file","description","tag","externalLink","quantity","blockchain","id","CreateProduct","nft","setNft","showSuccessAlert","setShowSuccessAlert","showErrorAlert","setShowErrorAlert","addNft","event","preventDefault","post","then","response","console","log","catch","error","setTimeout","width","ml","maxWidth","e","target","value"],"sources":["/Users/andreimaracheuski/marketplace_project/my-app/src/pages/CreateProduct.js"],"sourcesContent":["import * as React from \"react\";\nimport { Box, Stack, Grid, Alert } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { InputData } from \"../components/create/InputData\";\nimport { DragZone } from \"../components/create/DragZone\";\nimport { CreateButton } from \"../components/create/CreateButton\";\nimport { SelectBlock } from \"../components/create/SelectBlock\";\nimport axios from \"axios\";\nimport md5 from \"md5\";\n\nconst nftDefaultState = {\n  name: \"\",\n  file: \"\",\n  description: \"\",\n  tag: \"\",\n  externalLink: \"\",\n  quantity: \"\",\n  blockchain: \"\",\n  id: \"\"\n};\n\nexport const CreateProduct = () => {\n  const [nft, setNft] = useState(nftDefaultState);\n  const [showSuccessAlert, setShowSuccessAlert]= useState(false)\n  const [showErrorAlert, setShowErrorAlert]= useState(false)\n\n  const addNft = (event) => {\n    event.preventDefault();\n    axios.post('http://localhost:3001/api/items', nft)\n    .then(function (response) {\n      console.log(response);\n      setShowSuccessAlert(true)\n    })\n    .catch(function (error) {\n      console.log(error);\n      setShowErrorAlert(true)\n    });\n\n  setNft(nftDefaultState);\n    setTimeout(() => {\n      setShowSuccessAlert(false)\n      setShowErrorAlert(false)\n    }, 2000)\n  };\n  useEffect(() => {\n    setNft({... nft, id: md5(nft.name)})\n  }, [nft.name])\n \n  return (\n    <>\n      <DragZone onDrop={(file) => setNft({ ...nft, file })} />\n      <Box sx={{ width: \"100%\", ml: 2 }}>\n        <Stack direction=\"row\" spacing={2}>\n          <Grid container spacing={3} sx={{ maxWidth: \"50%\" }}>\n            <InputData \n            \n              value={nft.name}\n              onChange={(e) => setNft({ ...nft, name: e.target.value})}\n              label={\"Name\"}\n            />\n            <InputData\n              value={nft.externalLink}\n              onChange={(e) => setNft({ ...nft, externalLink: e.target.value })}\n              label={\"externalLink\"}\n            />\n\n            <InputData\n              value={nft.quantity}\n              onChange={(e) => setNft({ ...nft, quantity: e.target.value })}\n              label={\"Quantity\"}\n            />\n          </Grid>\n\n          <Grid container spacing={3} sx={{ maxWidth: \"50%\" }}>\n            <SelectBlock\n              value={nft.tag}\n              onChange={(e) => setNft({ ...nft, tag: e.target.value })}\n              label={\"Tag\"}\n              \n            />\n            <SelectBlock\n              value={nft.blockchain}\n              onChange={(e) => setNft({ ...nft, blockchain: e.target.value })}\n              label={\"Blockchain\"}\n            />\n          </Grid>\n        </Stack>\n      </Box>\n      <InputData\n        value={nft.description}\n        onChange={(e) => setNft({ ...nft, description: e.target.value })}\n        label={\"Description\"}\n      />\n      <CreateButton addNft={addNft} text={'create'}/>\n      \n        {showSuccessAlert && <Alert severity=\"success\">NFT successfully created!</Alert>}\n        {showErrorAlert && <Alert severity=\"error\">Something went wrong!</Alert>}\n      \n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}