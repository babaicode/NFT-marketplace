{"ast":null,"code":"var _jsxFileName = \"/Users/andreimaracheuski/marketplace_project/my-app/src/pages/CreateProduct.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { Box, FormControl, InputLabel, MenuItem, Select, TextField, Typography, Button, Stack, Grid } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { Theme } from \"../others/Theme\";\nimport createServece from \"../services/items\";\nimport { InputData } from \"../components/InputData\";\nimport { DragZone } from \"../components/DragZone\";\nimport { CreateButton } from \"../components/CreateButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CreateProduct = () => {\n  _s();\n  const [items, setItems] = useState();\n  const [nft, setNft] = useState({\n    name: \"\",\n    file: \"\",\n    description: \"\",\n    tag: \"\",\n    externalLink: \"\",\n    quantity: \"\",\n    blockchain: \"\"\n  });\n  useEffect(() => {\n    createServece.getAll().then(initialItems => {\n      setItems(initialItems);\n    });\n  }, []);\n  const addNft = event => {\n    event.preventDefault();\n\n    // createServece.create(nft).then((returnedItem) => {\n    //   setItems(items.concat(returnedItem));\n    // });\n\n    setNft({\n      name: \"\",\n      file: \"\",\n      description: \"\",\n      tag: \"\",\n      externalLink: \"\",\n      quantity: \"\",\n      blockchain: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragZone, {\n      onDrop: file => setNft({\n        ...nft,\n        file\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        ml: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            maxWidth: \"50%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.name,\n            onChange: e => setNft({\n              ...nft,\n              name: e.target.value\n            }),\n            label: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.externalLink,\n            onChange: e => setNft({\n              ...nft,\n              externalLink: e.target.value\n            }),\n            label: \"externalLink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputData, {\n            value: nft.quantity,\n            onChange: e => setNft({\n              ...nft,\n              quantity: e.target.value\n            }),\n            label: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          sx: {\n            maxWidth: \"50%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 14,\n            md: 9,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: Theme.palette.secondary.light,\n                boxShadow: 1,\n                borderRadius: 5,\n                p: 2,\n                maxWidth: \"max\",\n                \"&:hover\": {\n                  backgroundColor: Theme.palette.secondary.main\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"select blockchain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  m: 1,\n                  minWidth: 120\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"blockchain\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: nft.blockchain,\n                  onChange: e => setNft({\n                    ...nft,\n                    blockchain: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 1,\n                    children: \"blockchain1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 2,\n                    children: \"blockchain2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 3,\n                    children: \"blockchain3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputData, {\n      value: nft.description,\n      onChange: e => setNft({\n        ...nft,\n        description: e.target.value\n      }),\n      label: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      addNft: addNft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateProduct, \"OTeVofYtoLCSLqo6Q5tCz7nYGqs=\");\n_c = CreateProduct;\nvar _c;\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"names":["React","Box","FormControl","InputLabel","MenuItem","Select","TextField","Typography","Button","Stack","Grid","useState","useEffect","Theme","createServece","InputData","DragZone","CreateButton","CreateProduct","items","setItems","nft","setNft","name","file","description","tag","externalLink","quantity","blockchain","getAll","then","initialItems","addNft","event","preventDefault","width","ml","maxWidth","e","target","value","bgcolor","palette","secondary","light","boxShadow","borderRadius","p","backgroundColor","main","m","minWidth"],"sources":["/Users/andreimaracheuski/marketplace_project/my-app/src/pages/CreateProduct.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n  Button,\n  Stack,\n  Grid,\n} from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { Theme } from \"../others/Theme\";\nimport createServece from \"../services/items\";\nimport { InputData } from \"../components/InputData\";\nimport { DragZone } from \"../components/DragZone\";\nimport { CreateButton } from \"../components/CreateButton\";\n\nexport const CreateProduct = () => {\n  const [items, setItems] = useState();\n  const [nft, setNft] = useState({\n    name: \"\",\n    file: \"\",\n    description: \"\",\n    tag: \"\",\n    externalLink: \"\",\n    quantity: \"\",\n    blockchain: \"\",\n  });\n  useEffect(() => {\n    createServece.getAll().then((initialItems) => {\n      setItems(initialItems);\n    });\n  }, []);\n\n  const addNft = (event) => {\n    event.preventDefault();\n\n    // createServece.create(nft).then((returnedItem) => {\n    //   setItems(items.concat(returnedItem));\n    // });\n\n    setNft({\n      name: \"\",\n      file: \"\",\n      description: \"\",\n      tag: \"\",\n      externalLink: \"\",\n      quantity: \"\",\n      blockchain: \"\",\n    });\n  };\n  return (\n    <>\n      <DragZone onDrop={(file) => setNft({ ...nft, file })} />\n      <Box sx={{ width: \"100%\", ml: 2 }}>\n        <Stack direction=\"row\" spacing={2}>\n          <Grid container spacing={3} sx={{ maxWidth: \"50%\" }}>\n            <InputData\n              value={nft.name}\n              onChange={(e) => setNft({ ...nft, name: e.target.value })}\n              label={\"Name\"}\n            />\n            <InputData\n              value={nft.externalLink}\n              onChange={(e) => setNft({ ...nft, externalLink: e.target.value })}\n              label={\"externalLink\"}\n            />\n\n            <InputData\n              value={nft.quantity}\n              onChange={(e) => setNft({ ...nft, quantity: e.target.value })}\n              label={\"Quantity\"}\n            />\n          </Grid>\n\n          <Grid container spacing={3} sx={{ maxWidth: \"50%\" }}>\n            <Grid xs={14} md={9}>\n              <Box\n                sx={{\n                  bgcolor: Theme.palette.secondary.light,\n                  boxShadow: 1,\n                  borderRadius: 5,\n                  p: 2,\n                  maxWidth: \"max\",\n                  \"&:hover\": {\n                    backgroundColor: Theme.palette.secondary.main,\n                  },\n                }}\n              >\n                <Typography>select blockchain</Typography>\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\n                  <InputLabel>blockchain</InputLabel>\n                  <Select\n                    value={nft.blockchain}\n                    onChange={(e) =>\n                      setNft({ ...nft, blockchain: e.target.value })\n                    }\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>blockchain1</MenuItem>\n                    <MenuItem value={2}>blockchain2</MenuItem>\n                    <MenuItem value={3}>blockchain3</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid>\n            {/* <Grid xs={14} md={9}>\n              <Box\n                sx={{\n                  bgcolor: Theme.palette.secondary.light,\n                  boxShadow: 1,\n                  borderRadius: 5,\n                  p: 2,\n                  \"&:hover\": {\n                    backgroundColor: Theme.palette.secondary.main,\n                  },\n                }}\n              >\n                <Typography>select tag</Typography>\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\n                  <InputLabel>Tag</InputLabel>\n                  <Select\n                    value={nft.tag}\n                    label=\"Tag\"\n                    onChange={(e) => setNft({ ...nft, tag: e.target.value })}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Art</MenuItem>\n                    <MenuItem value={2}>Music</MenuItem>\n                    <MenuItem value={3}>Photo</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </Grid> */}\n            \n          </Grid>\n        </Stack>\n      </Box>\n\n      <InputData\n        value={nft.description}\n        onChange={(e) => setNft({ ...nft, description: e.target.value })}\n        label={\"Description\"}\n      />\n\n      <CreateButton addNft={addNft} />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}